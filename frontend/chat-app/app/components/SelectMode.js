"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const SelectMode = ({ onClick }) => {
    // fetch the assistantMode from cache if available otherwise default to basic
    const [mode, setMode] = (0, react_1.useState)(() => {
        const storedMode = localStorage.getItem('assistantMode');
        return storedMode === 'agentic' ? 'agentic' : 'basic';
    });
    const handleModeChange = (e) => {
        const selectedMode = e.target.value;
        localStorage.setItem('assistantMode', String(selectedMode));
        setMode(selectedMode);
        onClick(selectedMode);
    };
    return (<div className="text-gray-600 text-sm hover:text-gray-800 hover:shadow-sm focus:outline-none flex items-center space-x-2">
      <span>Assistant Mode</span>
      <label>
        <input type="radio" value="basic" checked={mode === 'basic'} onChange={handleModeChange}/>
        <span className="ml-1">Basic</span>
      </label>
      <label>
        <input type="radio" value="agentic" checked={mode === 'agentic'} onChange={handleModeChange}/>
        <span className="ml-1">Agentic</span>
      </label>
    </div>);
};
exports.default = SelectMode;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsZWN0TW9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNlbGVjdE1vZGUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaUNBQW1EO0FBTW5ELE1BQU0sVUFBVSxHQUE4QixDQUFDLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRTtJQUM1RCw2RUFBNkU7SUFDN0UsTUFBTSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsR0FBRyxJQUFBLGdCQUFRLEVBQXNCLEdBQUcsRUFBRTtRQUN6RCxNQUFNLFVBQVUsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3pELE9BQU8sVUFBVSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDeEQsQ0FBQyxDQUFDLENBQUM7SUFFSCxNQUFNLGdCQUFnQixHQUFHLENBQUMsQ0FBc0MsRUFBRSxFQUFFO1FBQ2xFLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBNEIsQ0FBQztRQUMzRCxZQUFZLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztRQUM1RCxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDdEIsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3hCLENBQUMsQ0FBQztJQUVGLE9BQU8sQ0FDTCxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsMEdBQTBHLENBQ3ZIO01BQUEsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FDMUI7TUFBQSxDQUFDLEtBQUssQ0FDSjtRQUFBLENBQUMsS0FBSyxDQUNKLElBQUksQ0FBQyxPQUFPLENBQ1osS0FBSyxDQUFDLE9BQU8sQ0FDYixPQUFPLENBQUMsQ0FBQyxJQUFJLEtBQUssT0FBTyxDQUFDLENBQzFCLFFBQVEsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLEVBRTdCO1FBQUEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUNwQztNQUFBLEVBQUUsS0FBSyxDQUNQO01BQUEsQ0FBQyxLQUFLLENBQ0o7UUFBQSxDQUFDLEtBQUssQ0FDSixJQUFJLENBQUMsT0FBTyxDQUNaLEtBQUssQ0FBQyxTQUFTLENBQ2YsT0FBTyxDQUFDLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQyxDQUM1QixRQUFRLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUU3QjtRQUFBLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLElBQUksQ0FDdEM7TUFBQSxFQUFFLEtBQUssQ0FDVDtJQUFBLEVBQUUsR0FBRyxDQUFDLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLGtCQUFlLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgU2VsZWN0TW9kZVByb3BzIHtcbiAgb25DbGljazogKG1vZGU6ICdiYXNpYycgfCAnYWdlbnRpYycpID0+IHZvaWQ7XG59XG5cbmNvbnN0IFNlbGVjdE1vZGU6IFJlYWN0LkZDPFNlbGVjdE1vZGVQcm9wcz4gPSAoeyBvbkNsaWNrIH0pID0+IHtcbiAgLy8gZmV0Y2ggdGhlIGFzc2lzdGFudE1vZGUgZnJvbSBjYWNoZSBpZiBhdmFpbGFibGUgb3RoZXJ3aXNlIGRlZmF1bHQgdG8gYmFzaWNcbiAgY29uc3QgW21vZGUsIHNldE1vZGVdID0gdXNlU3RhdGU8J2Jhc2ljJyB8ICdhZ2VudGljJz4oKCkgPT4ge1xuICAgIGNvbnN0IHN0b3JlZE1vZGUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXNzaXN0YW50TW9kZScpO1xuICAgIHJldHVybiBzdG9yZWRNb2RlID09PSAnYWdlbnRpYycgPyAnYWdlbnRpYycgOiAnYmFzaWMnO1xuICB9KTtcblxuICBjb25zdCBoYW5kbGVNb2RlQ2hhbmdlID0gKGU6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWRNb2RlID0gZS50YXJnZXQudmFsdWUgYXMgJ2Jhc2ljJyB8ICdhZ2VudGljJztcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYXNzaXN0YW50TW9kZScsIFN0cmluZyhzZWxlY3RlZE1vZGUpKTtcbiAgICBzZXRNb2RlKHNlbGVjdGVkTW9kZSk7XG4gICAgb25DbGljayhzZWxlY3RlZE1vZGUpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNjAwIHRleHQtc20gaG92ZXI6dGV4dC1ncmF5LTgwMCBob3ZlcjpzaGFkb3ctc20gZm9jdXM6b3V0bGluZS1ub25lIGZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMlwiPlxuICAgICAgPHNwYW4+QXNzaXN0YW50IE1vZGU8L3NwYW4+XG4gICAgICA8bGFiZWw+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgdmFsdWU9XCJiYXNpY1wiXG4gICAgICAgICAgY2hlY2tlZD17bW9kZSA9PT0gJ2Jhc2ljJ31cbiAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlTW9kZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWwtMVwiPkJhc2ljPC9zcGFuPlxuICAgICAgPC9sYWJlbD5cbiAgICAgIDxsYWJlbD5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICB2YWx1ZT1cImFnZW50aWNcIlxuICAgICAgICAgIGNoZWNrZWQ9e21vZGUgPT09ICdhZ2VudGljJ31cbiAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlTW9kZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWwtMVwiPkFnZW50aWM8L3NwYW4+XG4gICAgICA8L2xhYmVsPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2VsZWN0TW9kZTsiXX0=